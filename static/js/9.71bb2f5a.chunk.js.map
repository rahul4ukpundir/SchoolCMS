{"version":3,"sources":["components/PageTitleWrapper/index.tsx","components/PageTitle/index.tsx","components/StudentClass/ClassList.tsx","components/services/classServices.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","heading","subHeading","docs","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","statusOptions","id","name","ClassList","useTheme","useState","page","setPage","Container","Card","CardHeader","action","width","FormControl","fullWidth","InputLabel","Select","value","label","autoWidth","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","ClassId","ClassName","IsAcive","classData","hover","Typography","fontWeight","color","noWrap","padding","Checkbox","checked","Tooltip","arrow","IconButton","background","colors","primary","lighter","palette","main","size","error","p","TablePagination","count","length","onPageChange","event","newPage","rowsPerPage","rowsPerPageOptions"],"mappings":"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","file":"static/js/9.71bb2f5a.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageTitle from 'src/components/PageTitle';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport { classData } from '../services/classServices';\r\nimport { useState } from 'react';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader,\r\n  Container\r\n} from '@mui/material';\r\n\r\nconst statusOptions = [\r\n  {\r\n    id: 'all',\r\n    name: 'All'\r\n  },\r\n  {\r\n    id: 'completed',\r\n    name: 'Completed'\r\n  },\r\n  {\r\n    id: 'pending',\r\n    name: 'Pending'\r\n  },\r\n  {\r\n    id: 'failed',\r\n    name: 'Failed'\r\n  }\r\n];\r\n\r\n\r\nconst ClassList = () => {\r\n  const theme = useTheme();\r\n  const [page, setPage] = useState<number>(0);\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Class - List</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageTitle\r\n          heading=\"Class Details\"\r\n          subHeading=\"This form is used to see the available class\"\r\n          docs=\"/students/addstudents\"\r\n        />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Card>\r\n          <CardHeader\r\n            action={\r\n              <Box width={150}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel>Status</InputLabel>\r\n                  <Select\r\n                    value={'all'}\r\n                    //onChange={handleStatusChange}\r\n                    label=\"Status\"\r\n                    autoWidth\r\n                  >\r\n                    {statusOptions.map((statusOption) => (\r\n                      <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                        {statusOption.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n            }\r\n            title=\"Class Details\"\r\n          />\r\n          <Divider />\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Class Name</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  <TableCell align=\"right\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {classData().map((classData) => {\r\n                  return (\r\n                    <TableRow hover key={classData.ClassId}>\r\n                      <TableCell>\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          fontWeight=\"bold\"\r\n                          color=\"text.primary\"\r\n                          gutterBottom\r\n                          noWrap\r\n                        >\r\n                          {classData.ClassName}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={classData.IsAcive}\r\n                          //   onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                          //     handleSelectOneCryptoOrder(event, cryptoOrder.id)\r\n                          //   }\r\n                          value={classData.IsAcive}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Tooltip title=\"Edit Order\" arrow>\r\n                          <IconButton\r\n                            sx={{\r\n                              '&:hover': {\r\n                                background: theme.colors.primary.lighter\r\n                              },\r\n                              color: theme.palette.primary.main\r\n                            }}\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                          >\r\n                            <EditTwoToneIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete Order\" arrow>\r\n                          <IconButton\r\n                            sx={{\r\n                              '&:hover': {\r\n                                background: theme.colors.error.lighter\r\n                              },\r\n                              color: theme.palette.error.main\r\n                            }}\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                          >\r\n                            <DeleteTwoToneIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n            <Box p={2}>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={classData().length}\r\n                onPageChange={handlePageChange}\r\n               // onRowsPerPageChange={handleLimitChange}\r\n                page={page}\r\n                rowsPerPage={5}\r\n                rowsPerPageOptions={[5, 10, 25, 30]}\r\n              />\r\n            </Box>\r\n          </TableContainer>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassList;\r\n","export const classData = () => {\r\n  return [\r\n    { ClassId: 1, ClassName: 'LKG', IsAcive: true },\r\n    { ClassId: 2, ClassName: 'UKG', IsAcive: true },\r\n    { ClassId: 3, ClassName: '1st', IsAcive: true },\r\n    { ClassId: 4, ClassName: '2nd', IsAcive: true },\r\n    { ClassId: 5, ClassName: '3rd', IsAcive: true },\r\n    { ClassId: 7, ClassName: '4th', IsAcive: true },\r\n    { ClassId: 8, ClassName: '5th', IsAcive: true }\r\n  ];\r\n};\r\n"],"sourceRoot":""}