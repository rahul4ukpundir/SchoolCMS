{"version":3,"sources":["components/PageTitleWrapper/index.tsx","components/PageTitle/index.tsx","components/Label/index.tsx","Services/apiService.tsx","Services/studentService.tsx","components/Students/Thumb.tsx","components/Students/AddStudent.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","heading","subHeading","docs","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","LabelWrapper","colors","alpha","black","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","secondary","success","warning","error","info","Label","className","color","apiService","POSTCALL","PUTCALL","GETCALL","DELETECALL","GETENVIROMENTVARIBLES","urlMethodName","params","delay","a","axios","post","JSON","stringify","headers","then","response","data","config","put","get","delete","keyname","window","configEnv","apiBaseUrl","triggerAddStudent","studentModel","url","addStudent","result","console","log","Thumb","props","state","loading","thumb","undefined","nextProps","fileData","this","setState","reader","FileReader","onloadend","readAsDataURL","src","alt","name","height","width","React","Component","dayjs","extend","utc","validationSchema","yup","classId","integer","min","required","sectionId","email","studentName","max","fatherName","motherName","phoneNo","address","sectionData","value","label","classData","AddStudent","useState","formik","useFormik","initialValues","dob","format","gender","photo","isActive","file","onSubmit","values","handleSubmit","Container","Grid","direction","Card","CardHeader","title","Divider","CardContent","m","TextField","id","select","onChange","handleChange","touched","Boolean","errors","helperText","map","option","MenuItem","fullWidth","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","newValue","setFieldValue","renderInput","onBlur","handleBlur","FormControl","style","marginLeft","FormLabel","RadioGroup","row","defaultValue","event","currentTarget","FormControlLabel","control","Radio","defaultChecked","multiline","minRows","maxRows","type","files","margin","Button","my"],"mappings":"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","file":"static/js/9.7b552155.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\n  children?: ReactNode;\n}\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  ...rest\n}) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport const apiService = {\r\n  POSTCALL,\r\n  PUTCALL,\r\n  GETCALL,\r\n  DELETECALL,\r\n  GETENVIROMENTVARIBLES,\r\n};\r\n\r\n\r\n/* istanbul ignore next*/\r\nasync function POSTCALL(urlMethodName: any, params: any, delay: any, config: any= {}) {\r\n  return axios\r\n    .post(urlMethodName, JSON.stringify(params),{headers: {'Content-Type': 'application/json'}}) \r\n    .then((response: AxiosResponse) => response.data);\r\n}\r\n\r\n/* istanbul ignore next*/\r\nasync function PUTCALL(urlMethodName: any, params: any, delay: any,  config: any= {}) {\r\n  return axios\r\n    .put(urlMethodName, JSON.stringify(params), config)\r\n    .then((response: AxiosResponse) => response.data);\r\n}\r\n/* istanbul ignore next*/\r\nasync function GETCALL(urlMethodName: any, params: any, delay: any,  config: any= {}) {\r\n  return axios\r\n    .get(urlMethodName, config)\r\n    .then((response: AxiosResponse) => response.data);\r\n}\r\n/* istanbul ignore next*/\r\nasync function DELETECALL(urlMethodName: any, params: any, delay: any,  config: any= {}) {\r\n  return axios\r\n    .delete(urlMethodName, config)\r\n    .then((response: AxiosResponse) => response.data);\r\n}\r\n/* istanbul ignore next*/\r\nasync function GETENVIROMENTVARIBLES(keyname: any) {\r\n  // let test = await (window as {[key:string]: any})[\"envVars\"][\"waRedirectUri\"] as string;\r\n  let configEnv = (await (window as { [key: string]: any })[\"envVars\"][\r\n    keyname\r\n  ]) as string;\r\n\r\n  return configEnv;\r\n}\r\n","import { Student } from 'src/Model/StudentModel';\r\nimport { apiService } from './apiService';\r\n\r\nlet apiBaseUrl = 'https://localhost:7028/api/Student/';\r\n\r\nconst triggerFetchClass = async () => {\r\n  const url = `${apiBaseUrl}/getClassDeatails`;\r\n  return await apiService.GETCALL(url, 3000, '');\r\n};\r\n\r\nconst triggerFetchSection = async () => {\r\n  const url = `${apiBaseUrl}/getSectionDeatails`;\r\n  return await apiService.GETCALL(url, 3000, '');\r\n};\r\n\r\nconst triggerFetchStudent = async () => {\r\n  const url = `${apiBaseUrl}/getStudentDeatails`;\r\n  return await apiService.GETCALL(url, 3000, '');\r\n};\r\n\r\nconst triggerAddStudent = async (studentModel: Student) => {\r\n  const url = `${apiBaseUrl}AddStudents`;\r\n  return await apiService.POSTCALL(url, studentModel, 3000);\r\n};\r\nexport const fetchClasses = async () => {\r\n  // const result = await triggerFetchClass();\r\n  const classData = [\r\n    {\r\n      value: 1,\r\n      label: 'Pre_Nuresery'\r\n    },\r\n    {\r\n      value: 2,\r\n      label: 'Nuresery'\r\n    },\r\n    {\r\n      value: 3,\r\n      label: 'First'\r\n    },\r\n    {\r\n      value: 4,\r\n      label: 'Second'\r\n    },\r\n    {\r\n      value: 5,\r\n      label: 'Third'\r\n    },\r\n    {\r\n      value: 6,\r\n      label: 'Fourth'\r\n    },\r\n    {\r\n      value: 7,\r\n      label: 'Fifth'\r\n    }\r\n  ];\r\n\r\n  return classData;\r\n};\r\nexport const fetchSections = async () => {\r\n  //const result = await triggerFetchSection();\r\n  const sectionData = [\r\n    {\r\n      value: 1,\r\n      label: 'A'\r\n    },\r\n    {\r\n      value: 2,\r\n      label: 'B'\r\n    }\r\n  ];\r\n  return sectionData;\r\n};\r\nexport const fetchStudents = async () => {\r\n  const result = await triggerFetchStudent();\r\n  return result;\r\n};\r\nexport const addStudent = async (studentModel: Student) => {\r\n  try {\r\n    debugger;\r\n    const result = await triggerAddStudent(studentModel);\r\n    console.log(\"result =\"+result);\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nclass Thumb extends React.Component<any, any> {\r\n    constructor(props:any){\r\n        super(props);\r\n    }\r\n    state = {\r\n      loading: false,\r\n      thumb: undefined,\r\n    };\r\n  \r\n    componentWillReceiveProps(nextProps) {\r\n      if (!nextProps.fileData) { return; }\r\n  \r\n      this.setState({ loading: true }, () => {\r\n        let reader = new FileReader();\r\n  \r\n        reader.onloadend = () => {\r\n          this.setState({ loading: false, thumb: reader.result });\r\n        };\r\n  \r\n        reader.readAsDataURL(nextProps.fileData);\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const { loading, thumb } = this.state;\r\n      if (! this.props.fileData) { return null; }\r\n      if (loading) { return <p>loading...</p>; }\r\n  \r\n      return (<img src={thumb}\r\n        alt={this.props.fileData.name}\r\n        className=\"img-thumbnail mt-2\"\r\n        height={200}\r\n        width={200} />);\r\n    }\r\n  }\r\n\r\n  export default Thumb;\r\n  ","import { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageTitle from 'src/components/PageTitle';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { addStudent } from '../../Services/studentService';\r\nimport DateAdapter from '@mui/lab/AdapterDayjs';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  TextField,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Box\r\n} from '@mui/material';\r\n\r\nimport { useState } from 'react';\r\nimport { LocalizationProvider } from '@mui/lab';\r\nimport { Student } from 'src/Model/StudentModel';\r\nimport Label from '../Label';\r\nimport Thumb from './Thumb';\r\ndayjs.extend(utc)\r\nconst validationSchema = yup.object({\r\n  classId: yup.number().integer().min(1, \"Please select class\").required('Please select class.'),\r\n  sectionId: yup.number().integer().min(1, \"Please select section\").required('Please select section.'),\r\n  email: yup.string().email().required('Email is required.'),\r\n  studentName: yup\r\n    .string()\r\n    .max(32, 'Name shoud not be more than 16 character.')\r\n    .required('Name is required'),\r\n  fatherName: yup\r\n    .string()\r\n    .max(32, 'Father name shoud not be more than 16 character.')\r\n    .required('Father name is required'),\r\n  motherName: yup\r\n    .string()\r\n    .max(32, 'mother name shoud not be more than 16 character.')\r\n    .required('Mother name is required'),\r\n  phoneNo: yup\r\n    .string()\r\n    .max(10, 'Phone should be of minimum 10 characters length.')\r\n    .required('Phone is required'),\r\n  address: yup.string().max(64, 'Phone should not be more than 64 length.')\r\n});\r\n\r\nconst sectionData = [\r\n  {\r\n    value: 1,\r\n    label: 'A'\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'B'\r\n  }\r\n];\r\nconst classData = [\r\n  {\r\n    value: 1,\r\n    label: 'Pre_Nuresery'\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Nuresery'\r\n  },\r\n  {\r\n    value: 3,\r\n    label: 'First'\r\n  },\r\n  {\r\n    value: 4,\r\n    label: 'Second'\r\n  },\r\n  {\r\n    value: 5,\r\n    label: 'Third'\r\n  },\r\n  {\r\n    value: 6,\r\n    label: 'Fourth'\r\n  },\r\n  {\r\n    value: 7,\r\n    label: 'Fifth'\r\n  }\r\n];\r\n\r\nconst AddStudent = () => {\r\n  const [dobValue, setDobValue] = useState();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      classId: 0,\r\n      sectionId: 0,\r\n      studentName: '',\r\n      fatherName: '',\r\n      motherName: '',\r\n      dob: dayjs().utc().format(),\r\n      phoneNo: '',\r\n      gender: true,\r\n      email: '',\r\n      address: '',\r\n      photo: '',\r\n      isActive: true,\r\n      file:null\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values: Student) => {\r\n      debugger;\r\n      addStudent(values).then((data) => {});\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Helmet>\r\n          <title>Add Student</title>\r\n        </Helmet>\r\n        <PageTitleWrapper>\r\n          <PageTitle\r\n            heading=\"Add Student\"\r\n            subHeading=\"This form is used to add students\"\r\n          />\r\n        </PageTitleWrapper>\r\n        <Container maxWidth=\"lg\">\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"stretch\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardHeader title=\"New Student Registration\" />\r\n                <Divider />\r\n                <CardContent\r\n                  sx={{ '& .MuiTextField-root': { m: 2, width: '25ch' } }}\r\n                >\r\n                  {' '}\r\n                  <TextField\r\n                    id=\"classId\"\r\n                    name=\"classId\"\r\n                    select\r\n                    label=\"Select Class*\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.classId && Boolean(formik.errors.classId)\r\n                    }\r\n                    helperText={formik.touched.classId && formik.errors.classId}\r\n                  >\r\n                    {classData.map((option) => (\r\n                      <MenuItem key={option?.value} value={option?.value}>\r\n                        {option?.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  <TextField\r\n                    id=\"sectionId\"\r\n                    name=\"sectionId\"\r\n                    select\r\n                    label=\"Select section*\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.sectionId &&\r\n                      Boolean(formik.errors.sectionId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.sectionId && formik.errors.sectionId\r\n                    }\r\n                  >\r\n                    {sectionData.map((option) => (\r\n                      <MenuItem key={option?.value} value={option?.value}>\r\n                        {option?.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"studentName\"\r\n                    label=\"Student Name*\"\r\n                    value={formik.values.studentName}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.studentName &&\r\n                      Boolean(formik.errors.studentName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.studentName && formik.errors.studentName\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"fatherName\"\r\n                    label=\"Father Name*\"\r\n                    value={formik.values.fatherName}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.fatherName &&\r\n                      Boolean(formik.errors.fatherName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.fatherName && formik.errors.fatherName\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"motherName\"\r\n                    label=\"Mother Name*\"\r\n                    value={formik.values.motherName}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.motherName &&\r\n                      Boolean(formik.errors.motherName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.motherName && formik.errors.motherName\r\n                    }\r\n                  />\r\n                  <LocalizationProvider dateAdapter={DateAdapter}>\r\n                    <DatePicker\r\n                      value={formik.values.dob}\r\n                      onChange={(newValue) => {\r\n                        formik.setFieldValue('dob', newValue);\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          name=\"dob\"\r\n                          value={formik.values.dob}\r\n                          onBlur={formik.handleBlur}\r\n                          {...params}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </LocalizationProvider>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"phoneNo\"\r\n                    label=\"Phone No*\"\r\n                    value={formik.values.phoneNo}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.phoneNo && Boolean(formik.errors.phoneNo)\r\n                    }\r\n                    helperText={formik.touched.phoneNo && formik.errors.phoneNo}\r\n                  />\r\n                  <FormControl component=\"fieldset\" style={{ marginLeft: 22 }}>\r\n                    <FormLabel component=\"legend\">Gender</FormLabel>\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      name=\"gender\"\r\n                      defaultValue={formik.values.gender}\r\n                      onChange={(event) => {\r\n                        formik.setFieldValue(\r\n                          'gender',\r\n                          event.currentTarget.value\r\n                        );\r\n                      }}\r\n                    >\r\n                      <FormControlLabel\r\n                        value={true}\r\n                        control={<Radio defaultChecked={true} />}\r\n                        label=\"Male\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value={false}\r\n                        control={<Radio />}\r\n                        label=\"Female\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"address\"\r\n                    label=\"Address\"\r\n                    multiline={true}\r\n                    value={formik.values.address}\r\n                    onChange={formik.handleChange}\r\n                    minRows={3}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    maxRows={5}\r\n                  />\r\n                  \r\n                  <div className=\"form-group\">\r\n                  <Label>Photo upload</Label>\r\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\r\n                    formik.setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                    console.log(event.currentTarget.files[0])\r\n                    \r\n                  }} style ={{margin:20}} />\r\n\r\n                  {formik.values.file && <Thumb fileData={formik.values.file} />}\r\n                </div>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </CardContent>\r\n                <Divider sx={{ my: 5 }} />\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n"],"sourceRoot":""}