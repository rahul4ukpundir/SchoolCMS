{"version":3,"sources":["components/PageTitleWrapper/index.tsx","components/PageTitle/index.tsx","components/Students/AddStudent.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","heading","subHeading","docs","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","validationSchema","yup","classId","required","sectionId","email","studentName","max","fatherName","motherName","phone","sectionData","value","label","classData","AddStudent","useState","dobValue","setDobValue","formik","useFormik","initialValues","dob","gender","address","onSubmit","values","alert","JSON","stringify","useEffect","handleSubmit","direction","title","m","width","id","name","select","onChange","handleChange","error","touched","Boolean","errors","helperText","map","option","fullWidth","dateAdapter","DateAdapter","newValue","renderInput","params","margin","row","defaultValue","control","defaultChecked","multiline","minRows","maxRows","color","type","my"],"mappings":"iHACA,oCAKMA,EAAYC,YAAOC,IAAPD,EAChB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMC,QAAQ,EAAG,GADlC,UAyBaC,IAhBqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrD,OACE,mCACE,cAACN,EAAD,UACE,cAAC,IAAD,CAAWO,SAAS,KAApB,SACGD,U,4IC4BIN,IAtCuB,SAAC,GAKhC,IAAD,IAJFQ,eAIE,MAJQ,GAIR,MAHFC,kBAGE,MAHW,GAGX,MAFFC,YAEE,MAFK,GAEL,EADCC,EACD,iBACF,OACI,eAAC,IAAD,yBAAMC,WAAS,EAACC,eAAe,gBAAgBC,WAAW,UAAaH,GAAvE,cACI,eAAC,IAAD,CAAMI,MAAI,EAAV,UACI,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,SACKV,IAEL,cAAC,IAAD,CAAYQ,QAAQ,YAApB,SACKP,OAGT,cAAC,IAAD,CAAMM,MAAI,EAAV,SACI,cAAC,IAAD,CACII,KAAMT,EACNU,OAAO,SACPC,IAAI,sBACJC,GAAI,CAAEC,GAAI,CAAEC,GAAI,EAAGC,GAAI,IACvBT,QAAQ,YACRU,UAAW,cAAC,IAAD,CAAgBC,SAAS,UANxC,SAQKnB,Y,gRCTfoB,EAAmBC,IAAW,CAClCC,QAASD,MAAaE,SAAS,sBAC/BC,UAAWH,MAAaE,SAAS,wBACjCE,MAAOJ,MAAaI,QAAQF,SAAS,sBACrCG,YAAaL,MAEVM,IAAI,GAAI,6CACRJ,SAAS,oBACZK,WAAYP,MAETM,IAAI,GAAI,oDACRJ,SAAS,2BACZM,WAAYR,MAETM,IAAI,GAAI,oDACRJ,SAAS,2BACZO,MAAOT,MAEJM,IAAI,GAAI,oDACRJ,SAAS,uBAGRQ,EAAc,CAClB,CACEC,MAAO,EACPC,MAAO,KAET,CACED,MAAO,EACPC,MAAO,MAGLC,EAAY,CAChB,CACEF,MAAO,EACPC,MAAO,gBAET,CACED,MAAO,EACPC,MAAO,YAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,UAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,UAET,CACED,MAAO,EACPC,MAAO,UAmNIE,UA/MI,WACjB,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAASC,YAAU,CACvBC,cAAe,CACbnB,QAAS,GACTE,UAAW,GACXE,YAAa,GACbE,WAAY,GACZC,WAAY,GACZa,IAAK,GACLZ,MAAO,GACPa,OAAQ,GACRlB,MAAO,GACPmB,QAAS,IAEXxB,iBAAkBA,EAClByB,SAAU,SAACC,GACTC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,OAOvC,OAHAI,qBAAU,cAEP,IAED,8BACE,uBAAML,SAAUN,EAAOY,aAAvB,UACE,cAAC,IAAD,UACE,kDAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACEnD,QAAQ,cACRC,WAAW,wCAGf,cAAC,IAAD,CAAWF,SAAS,KAApB,SACE,cAAC,IAAD,CACEK,WAAS,EACTgD,UAAU,MACV/C,eAAe,SACfC,WAAW,UACXV,QAAS,EALX,SAOE,cAAC,IAAD,CAAMW,MAAI,EAACS,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYqC,MAAM,6BAClB,cAAC,IAAD,IACA,eAAC,IAAD,CACEvC,GAAI,CAAE,uBAAwB,CAAEwC,EAAG,EAAGC,MAAO,SAD/C,UAGG,IACD,cAAC,IAAD,CACEC,GAAG,UACHC,KAAK,UACLC,QAAM,EACNzB,MAAM,gBACN0B,SAAUpB,EAAOqB,aACjBC,MACEtB,EAAOuB,QAAQxC,SAAWyC,QAAQxB,EAAOyB,OAAO1C,SAElD2C,WAAY1B,EAAOuB,QAAQxC,SAAWiB,EAAOyB,OAAO1C,QATtD,SAWGY,EAAUgC,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAA8BnC,MAAK,OAAEmC,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,MAA7C,gBACGmC,QADH,IACGA,OADH,EACGA,EAAQlC,OADX,OAAekC,QAAf,IAAeA,OAAf,EAAeA,EAAQnC,YAK3B,cAAC,IAAD,CACEwB,GAAG,YACHE,QAAM,EACNzB,MAAM,kBACN0B,SAAUpB,EAAOqB,aACjBC,MACEtB,EAAOuB,QAAQxC,SAAWyC,QAAQxB,EAAOyB,OAAOxC,WAElDyC,WACE1B,EAAOuB,QAAQtC,WAAae,EAAOyB,OAAOxC,UAT9C,SAYGO,EAAYmC,KAAI,SAACC,GAAD,OACf,cAAC,IAAD,CAA8BnC,MAAK,OAAEmC,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,MAA7C,gBACGmC,QADH,IACGA,OADH,EACGA,EAAQlC,OADX,OAAekC,QAAf,IAAeA,OAAf,EAAeA,EAAQnC,YAK3B,cAAC,IAAD,CACEoC,WAAS,EACTZ,GAAG,cACHvB,MAAM,gBACND,MAAOO,EAAOO,OAAOpB,YACrBiC,SAAUpB,EAAOqB,aACjBC,MACEtB,EAAOuB,QAAQpC,aACfqC,QAAQxB,EAAOyB,OAAOtC,aAExBuC,WACE1B,EAAOuB,QAAQpC,aAAea,EAAOyB,OAAOtC,cAGhD,cAAC,IAAD,CACE0C,WAAS,EACTZ,GAAG,aACHvB,MAAM,eACND,MAAOO,EAAOO,OAAOlB,WACrB+B,SAAUpB,EAAOqB,aACjBC,MACEtB,EAAOuB,QAAQlC,YACfmC,QAAQxB,EAAOyB,OAAOpC,YAExBqC,WACE1B,EAAOuB,QAAQlC,YAAcW,EAAOyB,OAAOpC,aAG/C,cAAC,IAAD,CACEwC,WAAS,EACTZ,GAAG,aACHvB,MAAM,eACND,MAAOO,EAAOO,OAAOjB,WACrB8B,SAAUpB,EAAOqB,aACjBC,MACEtB,EAAOuB,QAAQjC,YACfkC,QAAQxB,EAAOyB,OAAOnC,YAExBoC,WACE1B,EAAOuB,QAAQjC,YAAcU,EAAOyB,OAAOnC,aAG/C,cAAC,IAAD,CAAsBwC,YAAaC,IAAnC,SACE,cAAC,IAAD,CACEtC,MAAOK,EACPsB,SAAU,SAACY,GACTjC,EAAYiC,IAEdC,YAAa,SAACC,GAAD,OAAY,cAAC,IAAD,eAAeA,SAG5C,cAAC,IAAD,CACEL,WAAS,EACTZ,GAAG,QACHvB,MAAM,YACND,MAAOO,EAAOO,OAAOhB,MACrB6B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQhC,OAASiC,QAAQxB,EAAOyB,OAAOlC,OACrDmC,WAAY1B,EAAOuB,QAAQhC,OAASS,EAAOyB,OAAOlC,QAEpD,eAAC,IAAD,CACErB,UAAU,WACVK,GAAI,CAAEyC,MAAO,OAAQmB,OAAQ,GAF/B,UAIE,cAAC,IAAD,CAAWjE,UAAU,SAArB,oBACA,eAAC,IAAD,CACEkE,KAAG,EACH,aAAW,SACXlB,KAAK,0BACLmB,aAAc,OAJhB,UAME,cAAC,IAAD,CACE5C,MAAM,OACN6C,QAAS,cAAC,IAAD,CAAOC,gBAAgB,IAChC7C,MAAM,SAER,cAAC,IAAD,CACED,MAAM,SACN6C,QAAS,cAAC,IAAD,IACT5C,MAAM,iBAKZ,cAAC,IAAD,CACEmC,WAAS,EACTZ,GAAG,UACHvB,MAAM,UACN8C,WAAW,EACX/C,MAAOO,EAAOO,OAAOF,QACrBe,SAAUpB,EAAOqB,aACjBoB,QAAS,IAEV,cAAC,IAAD,CACCZ,WAAS,EACTZ,GAAG,QACHvB,MAAM,QACND,MAAOO,EAAOO,OAAOrB,MACrBkC,SAAUpB,EAAOqB,aACjBqB,QAAS,IAEX,cAAC,IAAD,CACEC,MAAM,UACN1E,QAAQ,YACR4D,WAAS,EACTe,KAAK,SAJP,uBASF,cAAC,IAAD,CAASrE,GAAI,CAAEsE,GAAI","file":"static/js/11.19aa7a1f.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageTitle from 'src/components/PageTitle';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\n// import {fetchClasses, fetchSections} from \"../../Services/studentService\"\r\nimport DateAdapter from '@mui/lab/AdapterDayjs';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  TextField,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from '@mui/material';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { LocalizationProvider } from '@mui/lab';\r\nconst validationSchema = yup.object({\r\n  classId: yup.string().required('Select your class.'),\r\n  sectionId: yup.string().required('Select your section.'),\r\n  email: yup.string().email().required('Email is required.'),\r\n  studentName: yup\r\n    .string()\r\n    .max(16, 'Name shoud not be more than 16 character.')\r\n    .required('Name is required'),\r\n  fatherName: yup\r\n    .string()\r\n    .max(16, 'Father name shoud not be more than 16 character.')\r\n    .required('Father name is required'),\r\n  motherName: yup\r\n    .string()\r\n    .max(16, 'mother name shoud not be more than 16 character.')\r\n    .required('Mother name is required'),\r\n  phone: yup\r\n    .string()\r\n    .max(16, 'Phone should be of minimum 10 characters length.')\r\n    .required('Phone is required')\r\n});\r\n\r\nconst sectionData = [\r\n  {\r\n    value: 1,\r\n    label: 'A'\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'B'\r\n  }\r\n]\r\nconst classData = [\r\n  {\r\n    value: 1,\r\n    label: 'Pre_Nuresery'\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Nuresery'\r\n  },\r\n  {\r\n    value: 3,\r\n    label: 'First'\r\n  },\r\n  {\r\n    value: 4,\r\n    label: 'Second'\r\n  },\r\n  {\r\n    value: 5,\r\n    label: 'Third'\r\n  },\r\n  {\r\n    value: 6,\r\n    label: 'Fourth'\r\n  },\r\n  {\r\n    value: 7,\r\n    label: 'Fifth'\r\n  }\r\n];\r\n\r\nconst AddStudent = () => {\r\n  const [dobValue, setDobValue] = useState();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      classId: '',\r\n      sectionId: '',\r\n      studentName: '',\r\n      fatherName: '',\r\n      motherName: '',\r\n      dob: '',\r\n      phone: '',\r\n      gender: '',\r\n      email: '',\r\n      address: ''\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    //getClassDeatails();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Helmet>\r\n          <title>Add Student</title>\r\n        </Helmet>\r\n        <PageTitleWrapper>\r\n          <PageTitle\r\n            heading=\"Add Student\"\r\n            subHeading=\"This form is used to add students\"\r\n          />\r\n        </PageTitleWrapper>\r\n        <Container maxWidth=\"lg\">\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"stretch\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardHeader title=\"New Student Registration\" />\r\n                <Divider />\r\n                <CardContent\r\n                  sx={{ '& .MuiTextField-root': { m: 2, width: '50ch' } }}\r\n                >\r\n                  {' '}\r\n                  <TextField\r\n                    id=\"classId\"\r\n                    name=\"classId\"\r\n                    select\r\n                    label=\"Select Class*\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.classId && Boolean(formik.errors.classId)\r\n                    }\r\n                    helperText={formik.touched.classId && formik.errors.classId}\r\n                  >\r\n                    {classData.map((option) => (\r\n                      <MenuItem key={option?.value} value={option?.value}>\r\n                        {option?.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  <TextField\r\n                    id=\"sectionId\"\r\n                    select\r\n                    label=\"Select section*\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.classId && Boolean(formik.errors.sectionId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.sectionId && formik.errors.sectionId\r\n                    }\r\n                  >\r\n                    {sectionData.map((option) => (\r\n                      <MenuItem key={option?.value} value={option?.value}>\r\n                        {option?.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"studentName\"\r\n                    label=\"Student Name*\"\r\n                    value={formik.values.studentName}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.studentName &&\r\n                      Boolean(formik.errors.studentName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.studentName && formik.errors.studentName\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"fatherName\"\r\n                    label=\"Father Name*\"\r\n                    value={formik.values.fatherName}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.fatherName &&\r\n                      Boolean(formik.errors.fatherName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.fatherName && formik.errors.fatherName\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"motherName\"\r\n                    label=\"Mother Name*\"\r\n                    value={formik.values.motherName}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.motherName &&\r\n                      Boolean(formik.errors.motherName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.motherName && formik.errors.motherName\r\n                    }\r\n                  />\r\n                  <LocalizationProvider dateAdapter={DateAdapter}>\r\n                    <DatePicker\r\n                      value={dobValue}\r\n                      onChange={(newValue) => {\r\n                        setDobValue(newValue);\r\n                      }}\r\n                      renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                  </LocalizationProvider>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"phone\"\r\n                    label=\"Phone No*\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n                    helperText={formik.touched.phone && formik.errors.phone}\r\n                  />\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    sx={{ width: '50ch', margin: 2 }}\r\n                  >\r\n                    <FormLabel component=\"legend\">Gender</FormLabel>\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      name=\"row-radio-buttons-group\"\r\n                      defaultValue={\"male\"}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"male\"\r\n                        control={<Radio defaultChecked={true} />}\r\n                        label=\"Male\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"female\"\r\n                        control={<Radio />}\r\n                        label=\"Female\"\r\n                      />\r\n                      \r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"address\"\r\n                    label=\"Address\"\r\n                    multiline={true}\r\n                    value={formik.values.address}\r\n                    onChange={formik.handleChange}\r\n                    minRows={3}\r\n                  />\r\n                   <TextField\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    maxRows={5}\r\n                  />\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </CardContent>\r\n                <Divider sx={{ my: 5 }} />\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n"],"sourceRoot":""}